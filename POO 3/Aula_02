

class Triangulo:                      #entidade    
    def __init__(self):               #construtor
        self.b = 0                    #atributos encapsulado
        self.h = 0
    def set_base(self, valor):
       if valor >= 0: self.b = valor
       else: raise ValueError():
    def get_base(self):              #retornar um valor
       return self.b
    
    def set_altura(self, valor):     #armazenar um Valor
       if valor >= 0: self.h = valor
       else: raise ValueError():  
    def get_altura(self):            #recuperar o valor
       return self.h


    def calc_area(self):            #métodos = operação - método de Instância 
      return self.b * self.h / 2   

class UI:                           #Interface com o usuário
   @staticmethod                    #prints e inputs nessa classe
   def main():                      #operação principal da UI - método de classe
       x = Triangulo()
       #x.b = float(input("Informe o valor da base: "))
       #x.h = float(input("Informe o valor da altura: "))
       x.set_base(float(input("Informe o Valor da base: ")))
       x.set_altura(float(input("Informe o Valor da altura: ")))
       print(f"A área do triangulo é {x.calc_area()}")

UI.main()                            #rodar o programa